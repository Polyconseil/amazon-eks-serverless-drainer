AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  ClusterName:
    Type: String
    Default: default
  FunctionName:
    Type: String
    Default: defaultFunc

Transform: AWS::Serverless-2016-10-31
Description: eks-lambda-drainer Func
Resources:
  Func:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Ref FunctionName
      Description: github.com/pahud/eks-lambda-drainer
      Handler: main
      CodeUri: ./func.d
      Runtime: provided
      Layers:
        - !Sub "arn:aws:lambda:ap-northeast-1:${AWS::AccountId}:layer:layer-eks-kubectl-layer-stack:2"
      MemorySize: 512
      Environment:
        Variables:
          cluster_name: !Ref ClusterName
      Policies:
        - AWSLambdaBasicExecutionRole # Managed Policy
        - Version: '2012-10-17' # Policy Document
          Statement:
            - Effect: Allow
              Action:
                - ec2:DescribeInstances
                - ec2:DescribeTags
                - eks:DescribeCluster
                - autoscaling:CompleteLifecycleAction
              Resource: '*'
      #Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/LambdaEKSAdminRole"
      Timeout: 50
      Events:
        CWE1:
          Type: CloudWatchEvent
          Properties:
            Pattern:
              source:
                - aws.ec2
              detail-type: 
                - "EC2 Spot Instance Interruption Warning"
        CWE2:
          Type: CloudWatchEvent
          Properties:
            Pattern:
              source:
                - aws.autoscaling
              detail-type: 
                -  "EC2 Instance-terminate Lifecycle Action"
Outputs:
  Func:
    Description: "Lambda function Arn"
    Value: !GetAtt Func.Arn

  FuncIamRole:
    Description: "Lambda function IAM role Arn"
    Value: !GetAtt FuncRole.Arn

